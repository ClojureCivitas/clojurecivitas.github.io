# About

<img src="images/civitas-icon.svg" alt="Civitas Icon" align="right">

Clojure Civitas makes it easy for you to publish Clojure ideas and explorations
without the overhead of setting up a new project, blog, or repo.
Whether you're sketching out a quick experiment or writing a deeper post,
just fork this repo, create a namespace, write, commit and submit a pull request.
This is your shared scratch space.

<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1rem; margin: 2rem 0;">
<div style="border-left: 3px solid green; padding-left: 1rem;">
<h3>Non-linear exploration</h3>
<p>Navigate your own path through interconnected topics.</p>
</div>
<div style="border-left: 3px solid blue; padding-left: 1rem;">
<h3>Literate by design</h3>
<p>Write notebooks and situate them in a broader context by linking ideas.</p>
</div>
<div style="border-left: 3px solid orange; padding-left: 1rem;">
<h3>Community supported growth</h3>
<p>The best resources rise through collective refinement.</p>
</div>
</div>

An open effort to structure learning resources with meaningful connections.

"Civitas" refers to a community of citizens, encompassing the rights, duties, and privileges associated with belonging.
It's a term that signifies citizenship, not just a physical city, but also the political and social fabric of the community.

## Usage

See [README.md](https://github.com/ClojureCivitas/clojurecivitas.github.io/blob/main/README.md).

## Rationale

Clojure and markdown are a natural fit for interactive, literate programming.
But there is incidental complexity in setup and publishing.
Creating a new project, configuring a blog, choosing themes and styling, organizing files, adding analytics, and thinking about SEO all add overhead.
This friction discourages experimentation and makes publishing harder than it needs to be.

### Make Publishing Clojure Namespaces Easy

Markdown comments in Clojure namespaces is a perfect fit for interactive literate programming.
Creators should only have to care about their code, not setting up projects or hosting workflows.
Let's make a shared, organized platform for short experiments, tutorials, notes, and blog posts.

### Build a Database of Knowledge

Civitas aggregates structured metadata about the content it hosts and links it to other Clojure resources.
We can build a connected web of ideas, showing how concepts relate, what builds on what, and where to go next.
A [hex-grid interface](https://clojurecivitas.github.io/civitas/explorer.html) presents these relationships visually.
Each notebook can declare prerequisites, alternatives, and follow-ups.
This helps learners discover next steps, helps educators design coherent learning paths, and enables the community to improve content over time.
The goal is to make the Clojure knowledge ecosystem easier to explore and navigate.

### Embrace Alternatives

Clojure Civitas does not aim to centralize Clojure knowledge.
Rather it hopes to amplify existing resources, connect with them,
and add a place in between for raw ideas and creative experiments.

<img src="images/bees.jpg" alt="Honey bees beehive" style="width: 100%;">

## How it Works

### Minimal Moderation and Curation

Content is submitted via Pull Requests, which are reviewed to prevent abuse.
A small team of reviewers ensures quick turnaround.
Community representatives are available to assist and guide contributors.

### Metadata Creation

Metadata is provided by authors.
Future improvements may include automated extraction and smarter linking to enrich the knowledge base.

### Analytics

Page view analytics are publicly available.
See the [Clojure Civitas Analytics Dashboard](https://clojurecivitas.goatcounter.com/).

### Technical Details

Made with [Clay](https://scicloj.github.io/clay/).
See the [README.md](https://github.com/ClojureCivitas/clojurecivitas.github.io/blob/main/README.md) in the repository for contribution guidelines and technical details.

## Why markdown in code?

We value reproducible artifacts.
Start with code. Make it work. Then tell the story.
