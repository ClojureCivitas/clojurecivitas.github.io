# About

<img src="images/civitas-icon.svg" alt="Civitas Icon" align="right">

An open effort to structure learning resources with meaningful connections.

Clojure Civitas is a contributor-friendly platform that makes it easy for you to share Clojure ideas and explorations,
without the overhead of setting up a new project, blog, or repo.
Whether you're sketching out a quick experiment or writing a deeper post,
Civitas gives you a shared scratch space where publishing is simple.
Just open a namespace, write, and submit.
No infrastructure required.

<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1rem; margin: 2rem 0;">
<div style="border-left: 3px solid green; padding-left: 1rem;">
<h3>Non-linear exploration</h3>
<p>Navigate your own path through interconnected topics.</p>
</div>
<div style="border-left: 3px solid blue; padding-left: 1rem;">
<h3>Literate by design</h3>
<p>Write notebooks and situate them in a broader context by linking ideas.</p>
</div>
<div style="border-left: 3px solid orange; padding-left: 1rem;">
<h3>Community supported growth</h3>
<p>The best resources rise through collective refinement.</p>
</div>
</div>

## Rationale

Clojure and markdown are a natural fit for interactive, literate programming.
But there is incidental complexity in setup and publishing.
Creating a new project, configuring a blog, choosing themes and styling, organizing files, adding analytics, and thinking about SEO all add overhead.
This friction discourages experimentation and makes publishing harder than it needs to be.

### Make Publishing Notebooks Easy

[Clay](https://scicloj.github.io/clay/) notebooks combine Clojure and markdown for expressive, interactive literate programming.
Compared to blogs, gists, or repos, they better support combining narrative, code, and results in a single document.
Civitas removes the friction of publishing by letting anyone submit notebooks or markdown without setting up a new project or hosting workflow.
It provides a shared, well-organized platform for short experiments, tutorials, notes, and blog posts.

### Build a Database of Knowledge

Civitas aggregates structured metadata about the content it hosts and links it to other Clojure resources.
Instead of scattered, unstructured articles, Civitas supports a connected web of ideas,
showing how concepts relate, what builds on what, and where to go next.
Its [hex-grid interface](https://clojurecivitas.github.io/civitas/explorer.html) presents these relationships visually.
Each notebook can declare prerequisites, alternatives, and follow-ups.
This helps learners discover next steps, helps educators design coherent learning paths, and enables the community to improve content over time.
The goal is to make the Clojure knowledge ecosystem easier to explore and navigate.

### Embrace Alternatives

Clojure Civitas does not aim to centralize all Clojure knowledge.
Instead, it offers a flexible publishing pattern that individuals and communities can adopt.
Civitas can also be used as a library to help you publish your own content garden, independent of the main site.

<img src="images/bees.jpg" alt="Honey bees beehive" style="width: 100%;">

## How it Works

### Moderation and Curation

All content is submitted via Pull Requests, which are reviewed to prevent abuse.
A small team of reviewers ensures quick turnaround.
Community representatives are available to assist and guide contributors.

### Metadata Creation

Metadata is currently provided by authors.
Future improvements may include automated extraction and smarter linking to enrich the knowledge base.

### Analytics

Page view analytics are publicly available.
See the [Clojure Civitas Analytics Dashboard](https://clojurecivitas.goatcounter.com/).

### Technical Details

See the [README.md](https://github.com/ClojureCivitas/clojurecivitas.github.io/blob/main/README.md) in the repository for contribution guidelines and technical details.
