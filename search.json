[
  {
    "objectID": "pages/scicloj/noj/intro/getting-started-noj.html",
    "href": "pages/scicloj/noj/intro/getting-started-noj.html",
    "title": "Clojure Civitas",
    "section": "",
    "text": "Hello code champs, number ninjas and data divers!\nImagine being able to experiment with Clojure without needing to install tooling, set up editors, or even know about deps.edn Sounds like a dream, right? Well, dream no more—meet Noj’s new Code Reload Executable! We can skip the Clojure tooling and editor setup, but we do need to install the recommended Adoptive Java. Now we download the latest Noj jar from the scicloj noj github releases page. Let’s check the jar is in the Downloads directory, and that we have java installed by executing java -version. Launch Noj using java -jar and the path to the jar file. Pro tip, if you press tab while typing a path, it will autocomplete. Noj is running, it created a directory called notebooks, and it recommends we create a clojure file there. I’ll create my file with Notepad, being careful to create a .clj file rather than a text file. When I saved that file, a browser window opened. Let’s put them side by side. Every time I save the file, the notebook updates. If I’m interested in one particular top-level form, I can narrow the output by adding ,, anywhere in the form. And removing it renders the full notebook. And check this out—comments are rendered as Markdown. How cool is that? What an easy way to get coding!\nNoj isn’t just a notebook—it’s a fully featured data science environment. It includes interesting datasets that can be queried and the results shown as tables or even better as charts.\nNoj makes experimenting with Clojure easier than ever. No setup headaches, no complicated tooling—just pure coding joy.\nUntil next time, Keep on coding"
  },
  {
    "objectID": "pages/civitas/view/index.html",
    "href": "pages/civitas/view/index.html",
    "title": "Clojure Civitas",
    "section": "",
    "text": "(defn html [s content]\n  [:foreignObject {:x      (- s)\n                   :y      (- s)\n                   :width  (* 2 s)\n                   :height (* 2 s)}\n   [:div {:xmlns \"http://www.w3.org/1999/xhtml\"\n          :style {:width           \"100%\"\n                  :height          \"100%\"\n                  :text-align      :center\n                  :display         :flex\n                  :justify-content :center\n                  :align-items     :center\n                  :overflow        :visible}}\n    content]])\n\n\n(comment\n  (kind/hiccup [:div (for [i (range 10)]\n                       (/ i 0))]))\n\nOfficial Clojure DocumentationClojure for the Brave and TrueTransducers ExplainedClojureScript GuideReagent Documentationre-frame: A React FrameworkLuminus Web FrameworkTablecloth: Dataframe LibraryNotespace Live Notebookstech.ml Machine Learningdeps.edn ReferenceCIDER for Emacsshadow-cljs Build ToolKaocha Test RunnerSciCloj CommunityClojureCamp EventsClojureTV YouTubeClojurians SlackPracticalli TutorialsJVM Performance GuideComponent LibrarynREPL ProtocolDatomic DatabaseXTDB Documentation\n\n\nidtitleurlformattopicsleveldepends-onclj-docsOfficial Clojure Documentationhttps://clojure.org/guides/getting_startedreference[:core]\n0brave-clojureClojure for the Brave and Truehttps://www.braveclojure.com/interactive-book[:core :core/fp]\n1transducersTransducers Explainedhttps://www.youtube.com/watch?v=6mTbuzafcIIvideo[:core :core/fp]\n2[\"clj-docs\"]\nreagent-docsReagent Documentationhttps://reagent-project.github.io/library-docs[:web :web/frontend]\n1re-framere-frame: A React Frameworkhttps://day8.github.io/re-frame/library-docs[:web :web/frontend]\n2[\"reagent-docs\"]\nluminusLuminus Web Frameworkhttps://luminusweb.com/framework[:web :web/backend]\n2tableclothTablecloth: Dataframe Libraryhttps://github.com/scicloj/tableclothlibrary-docs[:data :data/analysis]\n1notespaceNotespace Live Notebookshttps://github.com/scicloj/notespaceinteractive-tool[:data :data/viz]\n2tech.mltech.ml Machine Learninghttps://github.com/techascent/tech.mllibrary-docs[:data :data/ml]\n3deps-edndeps.edn Referencehttps://clojure.org/reference/deps_and_clireference[:tooling]\n0ciderCIDER for Emacshttps://docs.cider.mx/tool-docs[:tooling :tooling/repl]\n1shadow-cljsshadow-cljs Build Toolhttps://shadow-cljs.github.io/docs/UsersGuide.htmltool-docs[:tooling :tooling/build]\n2sciclojSciCloj Communityhttps://scicloj.github.io/community[:community :community/orgs]\n0clojure-campClojureCamp Eventshttps://clojurecamp.berlin/community[:community :community/events]\n1clojure-tvClojureTV YouTubehttps://www.youtube.com/user/ClojureTVvideo-channel[:community :community/learning]\n0clojuriansClojurians Slackhttps://clojurians.net/community[:community :community/chat]\n0practicalliPracticalli Tutorialshttps://practical.li/tutorials[:community :community/learning]\n1jvm-tuningJVM Performance Guidehttps://clojure.org/reference/jvm_programmingguide[:systems :systems/production]\n3componentComponent Libraryhttps://github.com/stuartsierra/componentlibrary-docs[:systems :systems/design]\n2nreplnREPL Protocolhttps://nrepl.org/protocol[:systems :systems/tooling]\n2datomicDatomic Databasehttps://docs.datomic.com/cloud/database[:systems :systems/data :data/db]\n3clojurescriptClojureScript Guidehttps://clojurescript.org/reference[:core :web :tooling]\n1kaochaKaocha Test Runnerhttps://github.com/lambdaisland/kaochatool-docs[:tooling :tooling/testing]\n2xtdbXTDB Documentationhttps://xtdb.com/database[:systems :systems/data :data/db]\n3\n\n\n\nsource: content/pages/civitas/view/index.clj"
  }
]